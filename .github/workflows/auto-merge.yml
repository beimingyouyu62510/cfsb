name: Update Free Proxies

on:
  # 自动运行：每天上午 9:00 和下午 9:00 EDT (UTC 13:00 和 01:00 次日)
  schedule:
    - cron: '0 13,1 * * *'
  # 手动运行：在 GitHub 仓库 Actions 页面中手动触发
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.0

      # 优化点 1: 使用内置缓存
      # 删除手动清除缓存的步骤。
      # actions/setup-python 自带 pip 缓存，可以显著加快后续依赖的安装。
      - name: Set up Python
        uses: actions/setup-python@v5.1.0
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          set -e
          python -m pip install --upgrade pip
          pip install requests pyyaml aiohttp

      # 优化点 2: 改进日志输出
      # 使用 `tee` 命令同时将日志打印到控制台和文件，方便实时查看和调试
      - name: Run merge script
        run: |
          set -e
          python merge.py 2>&1 | tee merge.log || { echo "Merge script failed"; exit 1; }
          echo "Merge script completed"

      - name: Verify and display file contents
        run: |
          if [ -f providers/all.yaml ]; then
            echo "all.yaml exists, first line: $(head -n 1 providers/all.yaml)"
          else
            echo "all.yaml not found"
          fi
          if [ -f providers/us.yaml ]; then
            echo "us.yaml exists, first line: $(head -n 1 providers/us.yaml)"
          else
            echo "us.yaml not found"
          fi
          if [ -f fallback_urls.txt ]; then
            echo "fallback_urls.txt exists."
          fi

      # 优化点 3: 简化 Git 提交逻辑
      # 在提交前检查是否有文件更改，避免没有更新时生成空提交
      - name: Commit files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          if git status --porcelain | grep -q "providers/"; then
            echo "Changes detected in providers/, committing files."
            git add providers/all.yaml providers/us.yaml fallback_urls.txt
            git commit -m "Update proxy lists"
          else
            echo "No changes to commit. Exiting commit step."
          fi

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: merge-logs
          path: merge.log

      # 优化点 4: 改进失败通知
      # 替换为可靠的 Slack 通知，避免因无 Issue 号码而导致通知失败
      - name: Notify failure
        if: failure()
        uses: rtCamp/github-action-slack-notify@v2
        with:
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          text: |
            Workflow failed: ${{ github.workflow }}
            Repository: ${{ github.repository }}
            Link: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
